/* 
 * Forge SDK
 *
 * The Forge Platform contains an expanding collection of web service components that can be used with Autodesk cloud-based products or your own technologies. Take advantage of Autodeskâ€™s expertise in design and engineering.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: forge.help@autodesk.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Autodesk.Forge.Client;
using Autodesk.Forge;
using Autodesk.Forge.Model;

namespace Autodesk.Forge.Test
{
    /// <summary>
    ///  Class for testing ActivitiesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ActivitiesApiTests
    {
        private ActivitiesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ActivitiesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ActivitiesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ActivitiesApi
            //Assert.IsInstanceOfType(typeof(ActivitiesApi), instance, "instance is a ActivitiesApi");
        }

        
        /// <summary>
        /// Test CreateActivity
        /// </summary>
        [Test]
        public void CreateActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Activity activity = null;
            //var response = instance.CreateActivity(activity);
            //Assert.IsInstanceOf<Activity> (response, "response is Activity");
        }
        
        /// <summary>
        /// Test DeleteActivity
        /// </summary>
        [Test]
        public void DeleteActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteActivity(id);
            
        }
        
        /// <summary>
        /// Test DeleteActivityHistory
        /// </summary>
        [Test]
        public void DeleteActivityHistoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.DeleteActivityHistory(id);
            
        }
        
        /// <summary>
        /// Test GetActivity
        /// </summary>
        [Test]
        public void GetActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetActivity(id);
            //Assert.IsInstanceOf<Activity> (response, "response is Activity");
        }
        
        /// <summary>
        /// Test GetActivityVersions
        /// </summary>
        [Test]
        public void GetActivityVersionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.GetActivityVersions(id);
            //Assert.IsInstanceOf<List<Activity>> (response, "response is List<Activity>");
        }
        
        /// <summary>
        /// Test GetAllActivities
        /// </summary>
        [Test]
        public void GetAllActivitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllActivities();
            //Assert.IsInstanceOf<List<Activity>> (response, "response is List<Activity>");
        }
        
        /// <summary>
        /// Test PatchActivity
        /// </summary>
        [Test]
        public void PatchActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ActivityOptional activity = null;
            //instance.PatchActivity(id, activity);
            
        }
        
        /// <summary>
        /// Test SetActivityVersion
        /// </summary>
        [Test]
        public void SetActivityVersionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //ActivityVersion activityVersion = null;
            //instance.SetActivityVersion(id, activityVersion);
            
        }
        
        /// <summary>
        /// Test UpdateActivity
        /// </summary>
        [Test]
        public void UpdateActivityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //Activity activity = null;
            //instance.UpdateActivity(id, activity);
            
        }
        
    }

}
