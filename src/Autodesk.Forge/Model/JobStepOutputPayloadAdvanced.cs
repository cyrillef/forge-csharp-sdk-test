/* 
 * Forge SDK
 *
 * The Forge Platform contains an expanding collection of web service components that can be used with Autodesk cloud-based products or your own technologies. Take advantage of Autodeskâ€™s expertise in design and engineering.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: forge.help@autodesk.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace Autodesk.Forge.Model
{
    /// <summary>
    /// Advanced options for &#x60;step&#x60; type.
    /// </summary>
    [DataContract]
    public partial class JobStepOutputPayloadAdvanced :  IEquatable<JobStepOutputPayloadAdvanced>
    {
        /// <summary>
        /// A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported. 
        /// </summary>
        /// <value>A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported. </value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum ApplicationProtocolEnum
        {
            
            /// <summary>
            /// Enum _203 for "203"
            /// </summary>
            [EnumMember(Value = "203")]
            _203,
            
            /// <summary>
            /// Enum _214 for "214"
            /// </summary>
            [EnumMember(Value = "214")]
            _214,
            
            /// <summary>
            /// Enum _242 for "242"
            /// </summary>
            [EnumMember(Value = "242")]
            _242
        }

        /// <summary>
        /// A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported. 
        /// </summary>
        /// <value>A STEP file can be generated with the following Application Protocols: `203` for configuration controlled design, `214` for core data for automotive mechanical design processes, `242` for managed model based 3D engineering. By default, `214` will be exported. </value>
        [DataMember(Name="applicationProtocol", EmitDefaultValue=false)]
        public ApplicationProtocolEnum? ApplicationProtocol { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="JobStepOutputPayloadAdvanced" /> class.
        /// </summary>
        /// <param name="ApplicationProtocol">A STEP file can be generated with the following Application Protocols: &#x60;203&#x60; for configuration controlled design, &#x60;214&#x60; for core data for automotive mechanical design processes, &#x60;242&#x60; for managed model based 3D engineering. By default, &#x60;214&#x60; will be exported.  (default to &quot;214&quot;).</param>
        /// <param name="Tolerance">Possible values are between &#x60;0&#x60; and &#x60;1&#x60;. By default it is set at 0.001. (default to 0.001F).</param>
        public JobStepOutputPayloadAdvanced(ApplicationProtocolEnum? ApplicationProtocol = null, float? Tolerance = null)
        {
            // use default value if no "ApplicationProtocol" provided
            if (ApplicationProtocol == null)
            {
                this.ApplicationProtocol = (ApplicationProtocolEnum)Enum.Parse(typeof(ApplicationProtocolEnum), "214", true);
            }
            else
            {
                this.ApplicationProtocol = ApplicationProtocol;
            }
            // use default value if no "Tolerance" provided
            if (Tolerance == null)
            {
                this.Tolerance = 0.001F;
            }
            else
            {
                this.Tolerance = Tolerance;
            }
        }
        
        /// <summary>
        /// Possible values are between &#x60;0&#x60; and &#x60;1&#x60;. By default it is set at 0.001.
        /// </summary>
        /// <value>Possible values are between &#x60;0&#x60; and &#x60;1&#x60;. By default it is set at 0.001.</value>
        [DataMember(Name="tolerance", EmitDefaultValue=false)]
        public float? Tolerance { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JobStepOutputPayloadAdvanced {\n");
            sb.Append("  ApplicationProtocol: ").Append(ApplicationProtocol).Append("\n");
            sb.Append("  Tolerance: ").Append(Tolerance).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as JobStepOutputPayloadAdvanced);
        }

        /// <summary>
        /// Returns true if JobStepOutputPayloadAdvanced instances are equal
        /// </summary>
        /// <param name="other">Instance of JobStepOutputPayloadAdvanced to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JobStepOutputPayloadAdvanced other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.ApplicationProtocol == other.ApplicationProtocol ||
                    this.ApplicationProtocol != null &&
                    this.ApplicationProtocol.Equals(other.ApplicationProtocol)
                ) && 
                (
                    this.Tolerance == other.Tolerance ||
                    this.Tolerance != null &&
                    this.Tolerance.Equals(other.Tolerance)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.ApplicationProtocol != null)
                    hash = hash * 59 + this.ApplicationProtocol.GetHashCode();
                if (this.Tolerance != null)
                    hash = hash * 59 + this.Tolerance.GetHashCode();
                return hash;
            }
        }
    }

}

